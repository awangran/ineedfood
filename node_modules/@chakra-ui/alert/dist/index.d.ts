import * as _chakra_ui_system from '@chakra-ui/system';
import { SystemStyleObject, HTMLChakraProps, ThemingProps } from '@chakra-ui/system';
import * as _chakra_ui_spinner from '@chakra-ui/spinner';
import * as _chakra_ui_icon from '@chakra-ui/icon';
import * as react from 'react';
import { Dict } from '@chakra-ui/utils';

declare const useAlertStyles: () => Dict<SystemStyleObject>;
declare const STATUSES: {
    info: {
        icon: react.FunctionComponent<_chakra_ui_icon.IconProps>;
        colorScheme: string;
    };
    warning: {
        icon: react.FunctionComponent<_chakra_ui_icon.IconProps>;
        colorScheme: string;
    };
    success: {
        icon: react.FunctionComponent<_chakra_ui_icon.IconProps>;
        colorScheme: string;
    };
    error: {
        icon: react.FunctionComponent<_chakra_ui_icon.IconProps>;
        colorScheme: string;
    };
    loading: {
        icon: _chakra_ui_system.ComponentWithAs<"div", _chakra_ui_spinner.SpinnerProps>;
        colorScheme: string;
    };
};
declare type AlertStatus = keyof typeof STATUSES;

interface AlertOptions {
    /**
     * The status of the alert
     * @default "info"
     */
    status?: AlertStatus;
}
interface AlertProps extends HTMLChakraProps<"div">, AlertOptions, ThemingProps<"Alert"> {
    addRole?: boolean;
}
/**
 * Alert is used to communicate the state or status of a
 * page, feature or action
 */
declare const Alert: _chakra_ui_system.ComponentWithAs<"div", AlertProps>;

interface AlertDescriptionProps extends HTMLChakraProps<"div"> {
}
declare const AlertDescription: _chakra_ui_system.ComponentWithAs<"div", AlertDescriptionProps>;

interface AlertIconProps extends HTMLChakraProps<"span"> {
}
declare function AlertIcon(props: AlertIconProps): JSX.Element;

interface AlertTitleProps extends HTMLChakraProps<"div"> {
}
declare const AlertTitle: _chakra_ui_system.ComponentWithAs<"div", AlertTitleProps>;

export { Alert, AlertDescription, AlertDescriptionProps, AlertIcon, AlertIconProps, AlertProps, AlertStatus, AlertTitle, AlertTitleProps, useAlertStyles };
